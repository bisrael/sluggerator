#!/usr/bin/env bash

set -e

BUILD_DIR=$1

# We get passed these other things, but we don't really need them.

CACHE_DIR=$2
#ENV_DIR=$3

#BIN_DIR=$(cd $(dirname $0); pwd)
#BUILDPACK_DIR=$(dirname $BIN_DIR)

file="$BUILD_DIR/Sluggerator"

if [ ! -f "$file" ]; then
  file="$BUILD_DIR/.slugignore"
fi

if [ ! -f "$file" ]; then
  echo "I don't know how you got here, but exiting because we can't find a suitable Sluggerator or .slugignore file!"
  exit 0
fi

#echo "BUILD_DIR is $BUILD_DIR"
echo "Sluggerating with $file"

killfile () {
  if [[ -z "$DRY_RUN" ]]; then
#    echo "REAL: rm -f $1"
    rm -fv $1
  else
    echo "DRY: rm -f $1"
  fi
}

killdir () {
  if [[ -z "$DRY_RUN" ]]; then
#    echo "REAL: rm -rf $1"
    rm -rfv $1
  else
    echo "DRY: rm -rf $1"
  fi
}

slugitout () {
  sluggy="$(ls -1d $1 2>/dev/null || echo '')"

    if [[ -z "$sluggy" ]]; then
      echo "WARN: No files matching: $1"
      continue
    fi

  #  echo "sluggy is $sluggy"

    tf="$(mktemp)"

    echo "$sluggy" > $tf

    while read -r line_item; do
  #    echo "line_item is $line_item"

      if [[ -f "$line_item" ]]; then
        killfile $line_item
      elif [[ -d "$line_item" ]]; then
        killdir $line_item
      else
        echo "Unknown thing to sluggerate: $line"
      fi
    done < $tf
}

while read -r line; do
#  echo "Trying to sluggerate $line"

  if [[ $line =~ ^\s*#.*$ ]] || [[ -z "$line" ]]; then
#    echo "Skipping $line"
    continue
  fi

  slugitout "$BUILD_DIR/$line"

  if [[ ! -z "$CACHE_DIR" ]]; then
    slugitout "$CACHE_DIR/$line"
  fi
done < $file

(du -sh vendor/bundle/ruby/*/gems/* | sort -h) || echo "du failed!"
